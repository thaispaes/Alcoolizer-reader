/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import BC.Active;
import BC.Passive;
import static DAO.DevUtilidadesDAO.AtualizarPedidos;

import DAO.Func;
import DAO.UtilidadesDAO;
import VIEW.PAINEIS.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.net.URL;
import javax.swing.JTable;

/**
 *
 * @author Thais
 */
public class HomeAdmin extends javax.swing.JFrame {

    int numLinhas = 0;
    int j = 0;
    boolean pass = false, act = false;
    String linha, aux;

    /**
     * Creates new form HomeAdmin
     */
    public HomeAdmin() {
        initComponents();
        AtualizarPedidos();
       try {
            URL url = this.getClass().getResource("/Imagens/icone.png");
            Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
            setIconImage(imagemTitulo);
        } catch (Exception e) {
          
        }
        PainelCard.removeAll();
        PainelCard.add(new PainelBemVindo());
        PainelCard.validate();
        PainelCard.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Background = new javax.swing.JPanel();
        jPanel_Menu = new javax.swing.JPanel();
        jButton_importar = new javax.swing.JButton();
        jLabel_icon = new javax.swing.JLabel();
        jButton_visualizar = new javax.swing.JButton();
        jButton_opcoes = new javax.swing.JButton();
        jLabel_title1 = new javax.swing.JLabel();
        jLabel_title2 = new javax.swing.JLabel();
        jLabel_title3 = new javax.swing.JLabel();
        jButton_sobre = new javax.swing.JButton();
        jLabel_title4 = new javax.swing.JLabel();
        jPanel_Nav = new javax.swing.JPanel();
        jButton_exit = new javax.swing.JButton();
        jButton_logout = new javax.swing.JButton();
        PainelCard = new javax.swing.JPanel();
        jPanel_Nav1 = new javax.swing.JPanel();
        jPanel_Nav2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(854, 490));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(854, 490));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_Background.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Background.setMaximumSize(new java.awt.Dimension(854, 490));
        jPanel_Background.setMinimumSize(new java.awt.Dimension(854, 490));
        jPanel_Background.setPreferredSize(new java.awt.Dimension(854, 490));
        jPanel_Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_Menu.setBackground(new java.awt.Color(255, 152, 0));
        jPanel_Menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_importar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/arquivo.png"))); // NOI18N
        jButton_importar.setBorderPainted(false);
        jButton_importar.setContentAreaFilled(false);
        jButton_importar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_importarActionPerformed(evt);
            }
        });
        jPanel_Menu.add(jButton_importar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 110, -1));

        jLabel_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/user.png"))); // NOI18N
        jPanel_Menu.add(jLabel_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 70, -1));

        jButton_visualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/tabela.png"))); // NOI18N
        jButton_visualizar.setBorderPainted(false);
        jButton_visualizar.setContentAreaFilled(false);
        jButton_visualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_visualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_visualizarActionPerformed(evt);
            }
        });
        jPanel_Menu.add(jButton_visualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 110, 70));

        jButton_opcoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/opcoes.png"))); // NOI18N
        jButton_opcoes.setBorderPainted(false);
        jButton_opcoes.setContentAreaFilled(false);
        jButton_opcoes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_opcoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_opcoesActionPerformed(evt);
            }
        });
        jPanel_Menu.add(jButton_opcoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 370, 70, 70));

        jLabel_title1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel_title1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_title1.setText("<html>Document<br> Options");
        jPanel_Menu.add(jLabel_title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 110, -1));

        jLabel_title2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel_title2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_title2.setText("View dates");
        jPanel_Menu.add(jLabel_title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 110, -1));

        jLabel_title3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel_title3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_title3.setText("Options");
        jPanel_Menu.add(jLabel_title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 50, -1));

        jButton_sobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sobre.png"))); // NOI18N
        jButton_sobre.setBorderPainted(false);
        jButton_sobre.setContentAreaFilled(false);
        jButton_sobre.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_sobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sobreActionPerformed(evt);
            }
        });
        jPanel_Menu.add(jButton_sobre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 50, -1));

        jLabel_title4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel_title4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_title4.setText("About us");
        jPanel_Menu.add(jLabel_title4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        jPanel_Background.add(jPanel_Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 490));

        jPanel_Nav.setBackground(new java.awt.Color(255, 152, 0));
        jPanel_Nav.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_exit.setBackground(new java.awt.Color(255, 152, 0));
        jButton_exit.setForeground(new java.awt.Color(255, 152, 0));
        jButton_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/desligar.png"))); // NOI18N
        jButton_exit.setBorderPainted(false);
        jButton_exit.setContentAreaFilled(false);
        jButton_exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_exitActionPerformed(evt);
            }
        });
        jPanel_Nav.add(jButton_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 30, 30));

        jButton_logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/sair.png"))); // NOI18N
        jButton_logout.setBorderPainted(false);
        jButton_logout.setContentAreaFilled(false);
        jButton_logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_logoutActionPerformed(evt);
            }
        });
        jPanel_Nav.add(jButton_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, -1, 30));

        jPanel_Background.add(jPanel_Nav, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 750, 30));

        PainelCard.setBackground(new java.awt.Color(255, 255, 255));
        PainelCard.setLayout(new java.awt.CardLayout());
        jPanel_Background.add(PainelCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 720, 430));

        jPanel_Nav1.setBackground(new java.awt.Color(255, 152, 0));
        jPanel_Nav1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel_Background.add(jPanel_Nav1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 480, 750, 10));

        jPanel_Nav2.setBackground(new java.awt.Color(255, 152, 0));
        jPanel_Nav2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel_Background.add(jPanel_Nav2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 0, 60, 490));

        getContentPane().add(jPanel_Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton_exitActionPerformed

    private void jButton_importarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_importarActionPerformed
        PainelCard.removeAll();
        PainelCard.add(new PainelDocument());
        PainelCard.validate();
        PainelCard.repaint();
    }//GEN-LAST:event_jButton_importarActionPerformed

    private void jButton_visualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_visualizarActionPerformed
        PainelCard.removeAll();
        PainelCard.add(new PainelAnaliseADM());
        PainelCard.validate();
        PainelCard.repaint();
    }//GEN-LAST:event_jButton_visualizarActionPerformed

    private void jButton_opcoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_opcoesActionPerformed
        PainelCard.removeAll();
        PainelCard.add(new PainelConfig());
        PainelCard.validate();
        PainelCard.repaint();
    }//GEN-LAST:event_jButton_opcoesActionPerformed

    private void jButton_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_logoutActionPerformed
        UtilidadesDAO.logout();
        new TelaLogin().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton_logoutActionPerformed

    private void jButton_sobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sobreActionPerformed
        PainelCard.removeAll();
        PainelCard.add(new PainelSobre());
        PainelCard.validate();
        PainelCard.repaint();
    }//GEN-LAST:event_jButton_sobreActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel PainelCard;
    public static javax.swing.JButton jButton_exit;
    public static javax.swing.JButton jButton_importar;
    public static javax.swing.JButton jButton_logout;
    public static javax.swing.JButton jButton_opcoes;
    public static javax.swing.JButton jButton_sobre;
    public static javax.swing.JButton jButton_visualizar;
    public static javax.swing.JLabel jLabel_icon;
    public static javax.swing.JLabel jLabel_title1;
    public static javax.swing.JLabel jLabel_title2;
    public static javax.swing.JLabel jLabel_title3;
    public static javax.swing.JLabel jLabel_title4;
    public static javax.swing.JPanel jPanel_Background;
    public static javax.swing.JPanel jPanel_Menu;
    public static javax.swing.JPanel jPanel_Nav;
    public static javax.swing.JPanel jPanel_Nav1;
    public static javax.swing.JPanel jPanel_Nav2;
    // End of variables declaration//GEN-END:variables
public void ActiveData() {

        if (linha.contains("<RawData>")) {
            aux = aux.replaceAll("<RawData>", "");
            aux = aux.replaceAll("</RawData>", "");
            Active.RawData.add(aux.trim());
        }

        if (linha.contains("<RecordNum>")) {
            aux = aux.replaceAll("<RecordNum>", "");
            aux = aux.replaceAll("</RecordNum>", "");
            Active.RecordNum.add(aux.trim());
        }
        if (linha.contains("<MainSerial>")) {
            aux = aux.replaceAll("<MainSerial>", "");
            aux = aux.replaceAll("</MainSerial>", "");
            Active.MainSerial.add(aux.trim());
        }

        if (linha.contains("<MainFWV>")) {
            aux = aux.replaceAll("<MainFWV>", "");
            aux = aux.replaceAll("</MainFWV>", "");
            Active.MainFWV.add(aux.trim());
        }
        if (linha.contains("<SampleSerial>")) {
            aux = aux.replaceAll("<SampleSerial>", "");
            aux = aux.replaceAll("</SampleSerial>", "");
            Active.SampleSerial.add(aux.trim());
        }
        if (linha.contains("<SampleFWV>")) {
            aux = aux.replaceAll("<SampleFWV>", "");
            aux = aux.replaceAll("</SampleFWV>", "");
            Active.SampleFWV.add(aux.trim());
        }

        if (linha.contains("<DateTime>")) {
            aux = aux.replaceAll("<DateTime>", "");
            aux = aux.replaceAll("</DateTime>", "");
            Active.DateTime.add(aux.trim());
        }
        if (linha.contains("<EventType>")) {
            aux = aux.replaceAll("<EventType>", "");
            aux = aux.replaceAll("</EventType>", "");
            Active.EventType.add(aux.trim());
        }
        if (linha.contains("<DownloadDateTime>")) {
            aux = aux.replaceAll("<DownloadDateTime>", "");
            aux = aux.replaceAll("</DownloadDateTime>", "");
            Active.DownloadDateTime.add(aux.trim());
        }
        if (linha.contains("<TrueResult>")) {
            aux = aux.replaceAll("<TrueResult>", "");
            aux = aux.replaceAll("</TrueResult>", "");
            Active.TrueResult.add(aux.trim());
        }
    }

    public void PassiveData() {

        if (linha.contains("<RawData>")) {
            aux = aux.replaceAll("<RawData>", "");
            aux = aux.replaceAll("</RawData>", "");
            Passive.RawData.add(aux.trim());
        }

        if (linha.contains("<RecordNum>")) {
            aux = aux.replaceAll("<RecordNum>", "");
            aux = aux.replaceAll("</RecordNum>", "");
            Passive.RecordNum.add(aux.trim());
        }
        if (linha.contains("<MainSerial>")) {
            aux = aux.replaceAll("<MainSerial>", "");
            aux = aux.replaceAll("</MainSerial>", "");
            Passive.MainSerial.add(aux.trim());
        }

        if (linha.contains("<MainFWV>")) {
            aux = aux.replaceAll("<MainFWV>", "");
            aux = aux.replaceAll("</MainFWV>", "");
            Passive.MainFWV.add(aux.trim());
        }
        if (linha.contains("<SampleSerial>")) {
            aux = aux.replaceAll("<SampleSerial>", "");
            aux = aux.replaceAll("</SampleSerial>", "");
            Passive.SampleSerial.add(aux.trim());
        }
        if (linha.contains("<SampleFWV>")) {
            aux = aux.replaceAll("<SampleFWV>", "");
            aux = aux.replaceAll("</SampleFWV>", "");
            Passive.SampleFWV.add(aux.trim());
        }

        if (linha.contains("<DateTime>")) {
            aux = aux.replaceAll("<DateTime>", "");
            aux = aux.replaceAll("</DateTime>", "");
            Passive.DateTime.add(aux.trim());
        }
        if (linha.contains("<EventType>")) {
            aux = aux.replaceAll("<EventType>", "");
            aux = aux.replaceAll("</EventType>", "");
            Passive.EventType.add(aux.trim());
        }
        if (linha.contains("<DownloadDateTime>")) {
            aux = aux.replaceAll("<DownloadDateTime>", "");
            aux = aux.replaceAll("</DownloadDateTime>", "");
            Passive.DownloadDateTime.add(aux.trim());
        }
        if (linha.contains("<ResultQualitative>")) {
            aux = aux.replaceAll("<ResultQualitative>", "");
            aux = aux.replaceAll("</ResultQualitative>", "");
            Passive.ResultQualitative.add(aux.trim());
        }
    }

    public int NLine(File arquivo) {
        try {
            long tamanhoArquivo = arquivo.length();
            FileInputStream fs = new FileInputStream(arquivo);
            DataInputStream in = new DataInputStream(fs);
            LineNumberReader lineRead = new LineNumberReader(new InputStreamReader(in));
            lineRead.skip(tamanhoArquivo);
            numLinhas = lineRead.getLineNumber() + 1;
        } catch (IOException e) {
//TODO: Tratar exceção
        }
        return numLinhas;
    }

    public Object GetData(JTable table, int row_index, int col_index) {
        return table.getModel().getValueAt(row_index, col_index);
    }
}
